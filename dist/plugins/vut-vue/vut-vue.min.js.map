{"version":3,"file":"vut-vue.min.js","sources":["../../../src/plugins/vut-vue.js"],"sourcesContent":["let _Vue\n\nconst util = {\n  error (msg) {\n    throw new Error(`[vut-vue] ${msg}`)\n  }\n}\n\nconst install = (Vue) => {\n  _Vue = Vue\n  Object.defineProperty(_Vue.prototype, '$vut', {\n    get () { return this.$root._vut }\n  })\n  _Vue.mixin({\n    beforeCreate () {\n      if (!this.$options.vut) return\n      this._vut = this.$options.vut\n    }\n  })\n}\nexport default {\n  install,\n  instance: {\n    beforeCreate () {\n      if (!_Vue) {\n        util.error(`Please install 'Vue.use(vutVue)' in Vut.use(vutVue) before`)\n      }\n      this.$vue = new _Vue({\n        data: { $$state: [] }\n      })\n    },\n    destroyed () {\n      this.$vue.$data.$$state = []\n      this.$vue.$destroy()\n      delete this.$vue\n    }\n  },\n  module: {\n    created () {\n      const data = this.$context.$vue.$data\n      data.$$state.push(this.$state)\n      const index = data.$$state.length - 1\n      Object.defineProperty(this, '$state', {\n        get () {\n          return data.$$state[index]\n        },\n        set (val) {\n          data.$$state[index] = val\n        }\n      })\n    }\n  }\n}\n"],"names":["_Vue","util","msg","Error","Vue","defineProperty","prototype","this","$root","_vut","mixin","$options","vut","error","$vue","$$state","$data","$destroy","data","$context","push","$state","index","length","val"],"mappings":"kLAAA,IAAIA,SAEEC,kBACGC,SACC,IAAIC,mBAAmBD,oBAIjB,SAACE,KACRA,SACAC,eAAeL,EAAKM,UAAW,8BACpBC,KAAKC,MAAMC,UAExBC,+BAEIH,KAAKI,SAASC,WACdH,KAAOF,KAAKI,SAASC,2CAQrBZ,KACEa,yEAEFC,KAAO,IAAId,SACNe,yCAILD,KAAKE,MAAMD,gBACXD,KAAKG,kBACHV,KAAKO,sCAKNI,EAAOX,KAAKY,SAASL,KAAKE,QAC3BD,QAAQK,KAAKb,KAAKc,YACjBC,EAAQJ,EAAKH,QAAQQ,OAAS,SAC7BlB,eAAeE,KAAM,gCAEjBW,EAAKH,QAAQO,iBAEjBE,KACET,QAAQO,GAASE"}